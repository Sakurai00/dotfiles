---

# ====== asdf plugin ======

- name: Check if asdf plugin is installed
  ansible.builtin.shell:
    "asdf plugin list | grep python"
  register: pyenv_exists
  ignore_errors: true

- name: Install asdf plugin
  when: pyenv_exists is failed
  ansible.builtin.shell:
    "asdf plugin add python"

# ====== python ======

- name: Check if python {{ python_version }} is installed
  ansible.builtin.shell:
    "asdf list python | grep {{ python_version }}"
  register: python_exists
  ignore_errors: true

- name: Install python {{ python_version }}
  when: python_exists is failed
  ansible.builtin.shell:
    "asdf install python {{ python_version }}"

- name: Set global version
  when: python_exists is failed
  ansible.builtin.shell:
    "asdf global python {{ python_version }}"

# - name: Install pip3
#   become: true
#   ansible.builtin.apt:
#     name: python3-pip
#     state: latest

# ====== poetry ======

- name: Check if poetry is installed
  ansible.builtin.shell:
    "poetry --version"
  register: poetry_exists
  ignore_errors: true

- name: Install poetry
  when: poetry_exists is failed
  ansible.builtin.shell:
    "curl -sSL https://install.python-poetry.org | python3 -"

- name: Set poetry config
  ansible.builtin.shell:
    "poetry config virtualenvs.in-project true"
